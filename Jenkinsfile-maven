pipeline {
    agent any

    stages {
        
        stage('Setup parameters') {
            steps {
                script { 
                    properties([
                        parameters([
                            choice(
                                choices: ['No', 'Yes'], 
                                name: 'Clean'
                            ),
                       
                            string(
                                defaultValue: '1.0.0', 
                                name: 'ImageTag', 
                                trim: true
                            )
                        ])
                    ])
                }
            }
        }


        stage('clean') {
            when {
                 expression { env.Clean== "Yes" }
            }
            agent {
                docker {
                    image 'maven:3.8.5-openjdk-18'
                }
            }
            steps {
                sh '''
                 mvn clean 
                '''
            }
        }


        stage('validate') {
            agent {
                docker {
                    image 'maven:3.8.5-openjdk-18'
                }
            }
            steps {
                sh '''
                mvn validate
                '''
            }
        }



         stage('compile') {
             agent {
                docker {
                    image 'maven:3.8.5-openjdk-18'
                }
            }
            steps {
                sh '''
                mvn  compile 
                '''
            }
        }
 

        stage('test') {
            agent {
                docker {
                    image 'maven:3.8.5-openjdk-18'
                }
            }
            steps {
                sh '''
                mvn test
                '''
            }
        }



        stage('package') {
            agent {
                docker {
                    image 'maven:3.8.5-openjdk-11'
                }
            }
            steps {
                sh '''
                mvn package
                '''
            }
        }

       
        stage('verify') {
            agent {
                docker {
                    image 'maven:3.6.0-jdk-11-slim'
                }
            }
            steps {
                sh '''
                 mvn verify
                '''
            }
        }

 
        stage('install') {
            agent {
                docker {
                    image 'maven:3.6.0-jdk-11-slim'
                }
            }
            steps {
                sh '''
                 mvn install
                '''
            }
        }

        


          stage('SonarQube analysis') {
            agent {
                docker {

                  image 'sonarsource/sonar-scanner-cli:4.7.0'
                }
               }
               environment {
        CI = 'true'
        scannerHome='/opt/sonar-scanner'
    }
            steps{
                withSonarQubeEnv('Sonar') {
                    sh "${scannerHome}/bin/sonar-scanner"
                }
            }
        }



        stage('build images') {
 
            steps {
                sh '''
                 docker build -t devopseasylearning2021/erico:$ImageTag -f apache.Dockerfile .
                '''
            }
        }


        stage('deploy') {
 
            steps {
                sh '''
                docker rm -f odilia || true
                 docker run -d --name odilia -p 8081:80 devopseasylearning2021/erico:$ImageTag 
                 curl ifconfig.co
                '''
            }
        }

 
    }



}



   
