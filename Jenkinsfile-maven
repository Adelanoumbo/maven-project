pipeline {
    agent any

    stages {
        

        stage('clean') {
            agent {
                docker {
                    image 'maven:3.8.5-openjdk-18'
                }
            }
            steps {
                sh '''
                 mvn clean 
                '''
            }
        }


        stage('validate') {
            agent {
                docker {
                    image 'maven:3.8.5-openjdk-18'
                }
            }
            steps {
                sh '''
                mvn validate
                '''
            }
        }



         stage('compile') {
             agent {
                docker {
                    image 'maven:3.8.5-openjdk-18'
                }
            }
            steps {
                sh '''
                mvn  compile 
                '''
            }
        }
 

        stage('test') {
            agent {
                docker {
                    image 'maven:3.8.5-openjdk-18'
                }
            }
            steps {
                sh '''
                mvn test
                '''
            }
        }



        stage('package') {
            agent {
                docker {
                    image 'maven:3.8.5-openjdk-11'
                }
            }
            steps {
                sh '''
                mvn package
                '''
            }
        }

       
        stage('verify') {
            agent {
                docker {
                    image 'maven:3.6.0-jdk-11-slim'
                }
            }
            steps {
                sh '''
                 mvn verify
                '''
            }
        }

 
        stage('install') {
            agent {
                docker {
                    image 'maven:3.6.0-jdk-11-slim'
                }
            }
            steps {
                sh '''
                 mvn install
                '''
            }
        }

        


          stage('SonarQube analysis') {
            agent {
                docker {

                  image 'sonarsource/sonar-scanner-cli:4.7.0'
                }
               }
               environment {
        CI = 'true'
        scannerHome='/opt/sonar-scanner'
    }
            steps{
                withSonarQubeEnv('Sonar') {
                    sh "${scannerHome}/bin/sonar-scanner"
                }
            }
        }

 
    }



}



   
