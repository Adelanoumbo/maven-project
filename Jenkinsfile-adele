pipeline {
    agent {
    kubernetes {
      yaml '''
        apiVersion: v1
        kind: Pod
        spec:
          containers:
          - name: maven
            image: maven:alpine
            command:
            - cat
            tty: true
        '''
    }
  }
   
//    environment {
//   DOCKERHUB_CREDENTIALS=credentials('dockerhub')
//  }

    options { buildDiscarder(logRotator(artifactDaysToKeepStr: '',
     artifactNumToKeepStr: '', daysToKeepStr: '3', numToKeepStr: '5'))
      disableConcurrentBuilds() }
      

    stages {
        
    //    stage('Setup parameters') {
    //         steps {
    //             script { 
    //                 properties([
    //                     parameters([
                          

    //                         string(
    //                             defaultValue: '001', 
    //                             name: 'ImageTAG', 
    //                             trim: true
    //                         )
    //                     ])
    //                 ])
    //             }
    //         }
    //     }




        stage('clean') {
            

            steps {
               sh '''
               rm -rf webapp/target/webapp.war || true
              mvn clean
               '''
            }
        }

        stage('compile') {

            steps {
               sh '''
             mvn compile
               '''
            }
        }

stage('validate') {

            steps {
               sh '''
               mvn validate
               '''
            }
        }



stage('test') {

            steps {
               sh '''
             mvn test 
               '''
            }
        }

stage('package') {


            steps {
               sh '''
               ls -l
              mvn package
              ls -la
               '''
            }
        }

stage('verify') {
    

            steps {
               sh '''
              mvn verify
               '''
            }
        }


stage('install') {

            steps {
               sh '''
           mvn install
               '''
            }
        }
       
    //    stage('SonarQube analysis') {
    //         agent {
    //             docker {

    //               image 'sonarsource/sonar-scanner-cli:4.7.0'
    //             }
    //            }
    //            environment {
    //     CI = 'true'
    //     scannerHome='/opt/sonar-scanner'
    // }
    //         steps{
    //             withSonarQubeEnv('Sonar') {
    //                 sh "${scannerHome}/bin/sonar-scanner"
    //             }
    //         }
    //     }



// stage('build ') {

//             steps {
//                sh '''
//            docker build -t devopseasylearning2021/adela05:$ImageTAG .
//                '''
//             }
//         }
       





//       stage('Docker Login') {

//    steps {
//     sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
//    }
//   }

           
            

//      stage('Docker push ') {
//             steps {
//                sh '''
//               docker push devopseasylearning2021/adela05:$ImageTAG 
//                 '''
//             }
//         }

    


    // stage('Deploy with docker ') {
    //         steps {
    //            sh '''
    //            docker run -d -p 1150:8080 devopseasylearning2021/adela05:$ImageTAG 
    //             '''
    //         }
    //     }



    }
}
